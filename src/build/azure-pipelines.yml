trigger:
  branches:
    include:
    - refs/heads/release/*
    - refs/tags/v*

schedules:
- cron: "0 0 * * *"
  displayName: Daily midnight build
  branches:
    include:
    - master
  always: true

variables:
  cambionArtifactName: 'CambionBuildArtifacts'

pool:
  name: 'Whitestone'

stages:
- stage: 'Build'
  displayName: 'Build'
  variables:
  - group: 'RabbitMQ Test Parameters'
  - group: 'Azure Service Bus Test Parameters'
  jobs:
  - job: 'GitVersion'
    displayName: 'GitVersion'
    variables:
      cambionSemVer: ''
      cambionSemVerFull: ''
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core Runtime 8.x'
      inputs:
        packageType: 'runtime'
        version: '8.x'
    - task: gitversion/setup@0
      displayName: 'Setup GitVersion 5.x'
      inputs:
        versionSpec: '5.x'
    - task: gitversion/execute@0
      displayName: 'Execute GitVersion'
    - task: PowerShell@2
      displayName: 'Set semver variables (Prerelease)'
      inputs:
        targetType: 'Inline'
        script: |
          Write-Host "##vso[task.setvariable variable=cambionSemVer]$(GitVersion.MajorMinorPatch)"
          Write-Host "##vso[task.setvariable variable=cambionSemVerFull]$(GitVersion.MajorMinorPatch)-$(GitVersion.PreReleaseLabel)-$(GitVersion.BuildMetaData)"
    - task: PowerShell@2
      displayName: 'Set semver variables (Release)'
      inputs:
        targetType: 'Inline'
        script: |
          Write-Host "##vso[task.setvariable variable=cambionSemVer]$(GitVersion.MajorMinorPatch)"
          Write-Host "##vso[task.setvariable variable=cambionSemVerFull]$(GitVersion.MajorMinorPatch)"
      condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
    - task: PowerShell@2
      displayName: 'Set semver variables (Nightly)'
      inputs:
        targetType: 'Inline'
        script: |
          Write-Host "##vso[task.setvariable variable=cambionSemVer]$(GitVersion.MajorMinorPatch)"
          Write-Host "##vso[task.setvariable variable=cambionSemVerFull]$(GitVersion.MajorMinorPatch)-Nightly.$(Build.BuildId)"
      condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/master')
    - task: PowerShell@2
      displayName: 'Update build number'
      inputs:
        targetType: 'Inline'
        script: |
          Write-Host "##vso[build.updatebuildnumber]$(cambionSemVerFull)"
    - task: PowerShell@2
      displayName: 'Output variables'
      inputs:
        targetType: 'Inline'
        script: |
          Write-Host "##vso[task.setvariable variable=cambionSemVer;isOutput=true;]$(cambionSemVer)"
          Write-Host "##vso[task.setvariable variable=cambionSemVerFull;isOutput=true;]$(cambionSemVerFull)"
      name: outputVars
  - job: 'Build'
    displayName: 'Build, test and pack'
    dependsOn: GitVersion
    variables:
      cambionSemVer: $[dependencies.GitVersion.outputs['outputVars.cambionSemVer']]
      cambionSemVerFull: $[dependencies.GitVersion.outputs['outputVars.cambionSemVerFull']]
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core SDK 8.x'
      inputs:
        packageType: 'sdk'
        version: '8.x'
    - task: DotNetCoreCLI@2
      displayName: 'Perform tests'
      inputs:
        command: 'test'
        projects: |
          **/*.UnitTests.csproj
          **/*.IntegrationTests.csproj
        arguments: '-c Debug'
      env:
        RABBITMQTEST_RABBITMQ__CONNECTIONSTRING: $(RabbitMq.Test.ConnectionString)
        RABBITMQTEST_RABBITMQ__HOSTNAME: $(RabbitMq.Test.Hostname)
        RABBITMQTEST_RABBITMQ__USERNAME: $(RabbitMq.Test.Username)
        RABBITMQTEST_RABBITMQ__PASSWORD: $(RabbitMq.Test.Password)
        RABBITMQTEST_RABBITMQ__VIRTUALHOST: $(RabbitMq.Test.VirtualHost)
        AZURESERVICEBUSTEST_AZURESERVICEBUS__ENDPOINT: $(AzureServiceBus.Test.Endpoint)
        AZURESERVICEBUSTEST_AZURESERVICEBUS__TOPICNAME: $(AzureServiceBus.Test.TopicName)
        AZURESERVICEBUSTEST_AZURESERVICEBUS__SUBSCRIPTIONNAME: $(AzureServiceBus.Test.SubscriptionName)
        AZURESERVICEBUSTEST_AZURESERVICEBUS__TENANTID: $(AzureServiceBus.Test.TenantId)
        AZURESERVICEBUSTEST_AZURESERVICEBUS__CLIENTID: $(AzureServiceBus.Test.ClientId)
        AZURESERVICEBUSTEST_AZURESERVICEBUS__CLIENTSECRET: $(AzureServiceBus.Test.ClientSecret)
    - task: DotNetCoreCLI@2
      displayName: 'Build and pack projects for NuGet'
      inputs:
        command: 'custom'
        projects: |
          **/*.csproj
          !**/*.UnitTests.csproj
          !**/*.IntegrationTests.csproj
        custom: 'pack'
        arguments: "/p:PackageVersion=$(cambionSemVerFull) /p:Version=$(cambionSemVer) /p:InformationalVersion=$(cambionSemVerFull) -o $(Build.ArtifactStagingDirectory) -c Release"
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: $(cambionArtifactName)
        publishLocation: 'pipeline'
- stage: DeployPrerelease
  displayName: 'Deploy Prerelease'
  dependsOn: Build
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
  jobs:
  - deployment: DeployPrerelease
    displayName: 'Deploy prerelease to NuGet'
    environment: 'Cambion Prerelease'
    strategy:
      runOnce:
        deploy:
          steps:
          - template: deploy-template.yml
            parameters:
              artifactName: $(cambionArtifactName)
- stage: DeployRelease
  displayName: 'Deploy Release'
  dependsOn: Build
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
  jobs:
  - deployment: DeployRelease
    displayName: 'Deploy release to NuGet'
    environment: 'Cambion Release'
    strategy:
      runOnce:
        deploy:
          steps:
          - template: deploy-template.yml
            parameters:
              artifactName: $(cambionArtifactName)